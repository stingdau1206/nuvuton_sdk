C51 COMPILER V9.60.0.0   CAPTURE                                                           11/24/2022 21:56:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE CAPTURE
OBJECT MODULE PLACED IN .\Output\Capture.obj
COMPILER INVOKED BY: C:\Keil_v5_8051\C51\BIN\C51.EXE ..\Capture.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library\De
                    -vice\Include;..\..\..\..\Library\StdDriver\inc;..\..\Timer2_AutoReload_Capture) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND P
                    -RINT(.\LST\Capture.lst) TABS(2) OBJECT(.\Output\Capture.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          /*********************************************************************************************************
             -**/
   8          /* Website: http://www.nuvoton.com                                                                        
             - */
   9          /*  E-Mail : MicroC-8bit@nuvoton.com                                                                      
             - */
  10          /*  Date   : Jan/21/2020                                                                                  
             - */
  11          /*********************************************************************************************************
             -**/
  12          
  13          /*********************************************************************************************************
             -***/
  14          /*  File Function: MS51 Timer 2 capture function demo                                                     
             -  */
  15          //********************************************************************************************************
             -***/
  16          #include "IR.h"
  17          #include "millis.h"
  18          #include "board.h"
  19          
  20          #define PERIOD_OPEN 700
  21          #define PERIOD_CLOSE 300
  22          
  23          static void speaker_handle(uint8_t state);
  24          static void open_lock_handle();
  25          static void close_lock_handle();
  26          
  27          uint32_t u32Cmd, current_time, open_time;
  28          uint8_t count_key = 0;
  29          uint8_t count_speaker = 0;
  30          uint8_t count_find = 0;
  31          uint8_t key_flag = 0;
  32          uint8_t speaker_flag = 0;
  33          uint8_t led_flag = 0;
  34          uint8_t find_flag = 0;
  35          uint8_t speaker_state = 0;
  36          uint8_t key_state = 0;
  37          /*********************************************   *********************************************************
             -******/
  38          /*    Main function                                                                                       
             -  */
C51 COMPILER V9.60.0.0   CAPTURE                                                           11/24/2022 21:56:49 PAGE 2   

  39          /*********************************************************************************************************
             -***/
  40          void main(void)
  41          {
  42   1        millis_init();
  43   1        IR_Init();
  44   1      //  board_io_init();
  45   1      //  board_pwm_init();
  46   1      
  47   1        set_WDCON_WDCLR; // Clear WDT timer
  48   1      
  49   1        while (1)
  50   1        {
  51   2          set_WDCON_WDCLR;
  52   2          if(IR_Check(&u32Cmd, 1))
  53   2          {
  54   3            open_time++;
  55   3          }
  56   2      //    current_time = millis();
  57   2      //    if (find_flag)
  58   2      //    {
  59   2      //      LED_OUT_PIN = !LED_OUT_PIN;
  60   2      //      if (count_find < 6)
  61   2      //      {
  62   2      //        PWMRUN = !PWMRUN;
  63   2      //        XINHAN_OUT_PIN = !XINHAN_OUT_PIN;
  64   2      //      }
  65   2      //      else
  66   2      //      {
  67   2      //        PWMRUN = 0;
  68   2      //        XINHAN_OUT_PIN = 0;
  69   2      //      }
  70   2      //      count_find++;
  71   2      //      if (count_find >= 40)
  72   2      //      {
  73   2      //        PWMRUN = 0;
  74   2      //        XINHAN_OUT_PIN = 0;
  75   2      //        LED_OUT_PIN = 0;
  76   2      //        count_find = 0;
  77   2      //        find_flag = 0;
  78   2      //      }
  79   2      //    }
  80   2      //    while (millis() - current_time < 500)
  81   2      //    {
  82   2      //      set_WDCON_WDCLR;
  83   2      //      if (IR_Check(&u32Cmd, 1))
  84   2      //      {
  85   2      //        switch (u32Cmd)
  86   2      //        {
  87   2      //        case FIND_BUTTON:
  88   2      //          find_flag = 1;
  89   2      //          count_find = 0;
  90   2      //          break;
  91   2      //        case KEY_BUTTON:
  92   2      //          count_key++;
  93   2      //          if (key_state == 0)
  94   2      //          {
  95   2      //            if (count_key >= 70)
  96   2      //            {
  97   2      //              open_lock_handle();
  98   2      //              LED_OUT_PIN = 1;
  99   2      //              open_time = millis();
C51 COMPILER V9.60.0.0   CAPTURE                                                           11/24/2022 21:56:49 PAGE 3   

 100   2      //              led_flag = 1;
 101   2      //            }
 102   2      //          }
 103   2      //          else
 104   2      //          {
 105   2      //            close_lock_handle();
 106   2      //          }
 107   2      //          break;
 108   2      //        case SPEAKER_BUTTON:
 109   2      //          count_speaker++;
 110   2      //          if (count_speaker >= 40)
 111   2      //          {
 112   2      //            count_speaker = 0;
 113   2      //            speaker_state = !speaker_state;
 114   2      //            speaker_handle(speaker_state);
 115   2      //          }
 116   2      //          break;
 117   2      //        }
 118   2      //      }
 119   2      //    }
 120   2      //    if(key_state == 1 && (millis() - open_time) > 10000 && led_flag == 1)
 121   2      //    {
 122   2      //      led_flag = 0;
 123   2      //      LED_OUT_PIN = 0;
 124   2      //      PWMRUN = 1;
 125   2      //      delay_ms(PERIOD_OPEN);
 126   2      //      PWMRUN = 0;
 127   2      //      delay_ms(PERIOD_CLOSE);
 128   2      //      set_WDCON_WDCLR;
 129   2      //      PWMRUN = 1;
 130   2      //      delay_ms(PERIOD_OPEN);
 131   2      //      PWMRUN = 0;
 132   2      //    }
 133   2        }
 134   1      }
 135          
 136          static void open_lock_handle()
 137          {
 138   1        set_WDCON_WDCLR;
 139   1        LED_OUT_PIN = 1;
 140   1        PWMRUN = 1;
 141   1        XINHAN_OUT_PIN = 1;
 142   1        delay_ms(PERIOD_OPEN);
 143   1        XINHAN_OUT_PIN = 0;
 144   1        set_WDCON_WDCLR;
 145   1        delay_ms(PERIOD_OPEN);
 146   1        set_WDCON_WDCLR;
 147   1        delay_ms(PERIOD_OPEN);
 148   1        PWMRUN = 0;
 149   1        LOCK_OUT_PIN = 1;
 150   1        count_key = 0;
 151   1        key_state = 1;
 152   1        LED_OUT_PIN = 0;
 153   1      }
 154          
 155          static void close_lock_handle()
 156          {
 157   1        int i;
 158   1        for (i = 0; i < 2; i++)
 159   1        {
 160   2          set_WDCON_WDCLR;
 161   2          PWMRUN = 1;
C51 COMPILER V9.60.0.0   CAPTURE                                                           11/24/2022 21:56:49 PAGE 4   

 162   2          XINHAN_OUT_PIN = 1;
 163   2          delay_ms(PERIOD_OPEN);
 164   2          XINHAN_OUT_PIN = 0;
 165   2          PWMRUN = 0;
 166   2          delay_ms(PERIOD_CLOSE);
 167   2        }
 168   1        count_find = 40;
 169   1        LED_OUT_PIN = 0;
 170   1        key_state = 0;
 171   1        LOCK_OUT_PIN = 0;
 172   1      }
 173          
 174          static void speaker_handle(uint8_t state)
 175          {
 176   1        if (state)
 177   1        {
 178   2          PWMRUN = 1;
 179   2          XINHAN_OUT_PIN = 1;
 180   2          LED_OUT_PIN = 1;
 181   2          delay_ms(PERIOD_OPEN);
 182   2          PWMRUN = 0;
 183   2          XINHAN_OUT_PIN = 0;
 184   2          LED_OUT_PIN = 0;
 185   2          delay_ms(PERIOD_CLOSE);
 186   2          set_WDCON_WDCLR;
 187   2          XINHAN_OUT_PIN = 1;
 188   2          LED_OUT_PIN = 1;
 189   2          delay_ms(PERIOD_OPEN);
 190   2          XINHAN_OUT_PIN = 0;
 191   2          LED_OUT_PIN = 0;
 192   2          delay_ms(PERIOD_CLOSE);
 193   2          set_WDCON_WDCLR;
 194   2          XINHAN_OUT_PIN = 1;
 195   2          LED_OUT_PIN = 1;
 196   2          delay_ms(PERIOD_OPEN);
 197   2          XINHAN_OUT_PIN = 0;
 198   2          LED_OUT_PIN = 0;
 199   2          set_WDCON_WDCLR;
 200   2        }
 201   1        else
 202   1        {
 203   2          PWMRUN = 1;
 204   2          delay_ms(PERIOD_OPEN);
 205   2          set_WDCON_WDCLR;
 206   2          delay_ms(PERIOD_OPEN);
 207   2          set_WDCON_WDCLR;
 208   2          delay_ms(PERIOD_OPEN);
 209   2          PWMRUN = 0;
 210   2          delay_ms(PERIOD_CLOSE);
 211   2          set_WDCON_WDCLR;
 212   2          PWMRUN = 1;
 213   2          XINHAN_OUT_PIN = 1;
 214   2          delay_ms(PERIOD_OPEN);
 215   2          PWMRUN = 0;
 216   2          XINHAN_OUT_PIN = 0;
 217   2          set_WDCON_WDCLR;
 218   2        }
 219   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
C51 COMPILER V9.60.0.0   CAPTURE                                                           11/24/2022 21:56:49 PAGE 5   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
