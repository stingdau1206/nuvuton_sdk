C51 COMPILER V9.60.0.0   IR                                                                08/14/2022 23:18:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Output\IR.obj
COMPILER INVOKED BY: C:\Keil_v5_8051\C51\BIN\C51.EXE ..\IR.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\Library\Device\
                    -Include;..\..\..\..\Library\StdDriver\inc;..\..\Timer2_AutoReload_Capture) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(
                    -.\LST\IR.lst) TABS(2) OBJECT(.\Output\IR.obj)

line level    source

   1          #include "IR.h"
   2          
   3          #define IR_IN_VAL P12
   4          
   5          #define NUM_BIT 12
   6          
   7          #define MIN_LOW 100
   8          #define MAX_LOW 1600
   9          #define LOW_VAL 800
  10          #define MIN_HI 100
  11          #define MAX_HI 1600
  12          
  13          static void tim2_init(void);
  14          static void cap_init(void);
  15          
  16          #define STATE_IDLE 0
  17          #define STATE_RECEIVE 1
  18          #define STATE_CHECK_BIT_0 2
  19          #define STATE_CHECK_BIT_1 3
  20          #define STATE_DECODE_SUCC 4
  21          
  22          typedef void (*pfunc)(void);
  23          
  24          void idle_state(void);
  25          void receive_state(void);
  26          void check_bit_0_state(void);
  27          void check_bit_1_state(void);
  28          void decode_succ_state(void);
  29          
  30          static pfunc funcSet[] = {
  31            idle_state,
  32            receive_state,
  33            check_bit_0_state,
  34            check_bit_1_state,
  35            decode_succ_state
  36          };
  37          
  38          static uint8_t u8State = STATE_IDLE;
  39          static uint8_t u8Count = 0;
  40          static uint32_t u32Result = 0;
  41          
  42          void idle_state(void)
  43          {
  44   1        if (!IR_IN_VAL) {
  45   2          u8Count = 0;
  46   2          u32Result = 0;
  47   2          u8State = STATE_RECEIVE;
  48   2        }
  49   1      }
  50          
  51          void receive_state(void)
  52          {
  53   1        uint16_t u16Tmp;
C51 COMPILER V9.60.0.0   IR                                                                08/14/2022 23:18:49 PAGE 2   

  54   1        if (IR_IN_VAL) {
  55   2          u16Tmp = C0H * 256 + C0L;
  56   2          if (u16Tmp < MIN_LOW) {
  57   3            u8State = STATE_IDLE;
  58   3            return;
  59   3          }
  60   2          if (u16Tmp > MAX_LOW) {
  61   3            u8State = STATE_IDLE;
  62   3            return;
  63   3          }
  64   2          if (u16Tmp > LOW_VAL) {
  65   3            u32Result <<= 1;
  66   3            ++u8Count;
  67   3            if (u8Count == NUM_BIT) {
  68   4              u8State = STATE_DECODE_SUCC;
  69   4              return;
  70   4            }
  71   3            u8State = STATE_CHECK_BIT_0;
  72   3          } else {
  73   3            u32Result <<= 1;
  74   3            u32Result |= 1;
  75   3            ++u8Count;
  76   3            if (u8Count == NUM_BIT) {
  77   4              u8State = STATE_DECODE_SUCC;
  78   4              return;
  79   4            }     
  80   3            u8State = STATE_CHECK_BIT_1;
  81   3          }
  82   2        }
  83   1      }
  84          
  85          void check_bit_0_state(void)
  86          {
  87   1        uint16_t u16Tmp;
  88   1        if (!IR_IN_VAL) {
  89   2          u16Tmp = C0H * 256 + C0L;
  90   2          if (u16Tmp < MIN_HI) {
  91   3            u8State = STATE_IDLE;
  92   3            return;
  93   3          }
  94   2          if (u16Tmp > MAX_HI) {
  95   3            u8State = STATE_IDLE;
  96   3            return;
  97   3          }
  98   2          if (u16Tmp < LOW_VAL) {
  99   3            u8State = STATE_RECEIVE;
 100   3          } else {
 101   3            u8State = STATE_IDLE;
 102   3          }
 103   2        }
 104   1      }
 105          
 106          void check_bit_1_state(void)
 107          {
 108   1        uint16_t u16Tmp;
 109   1        if (!IR_IN_VAL) {
 110   2          u16Tmp = C0H * 256 + C0L;
 111   2          if (u16Tmp < MIN_HI) {
 112   3            u8State = STATE_IDLE;
 113   3            return;
 114   3          }
 115   2          if (u16Tmp > MAX_HI) {
C51 COMPILER V9.60.0.0   IR                                                                08/14/2022 23:18:49 PAGE 3   

 116   3            u8State = STATE_IDLE;
 117   3            return;
 118   3          }
 119   2          if (u16Tmp > LOW_VAL) {
 120   3            u8State = STATE_RECEIVE;
 121   3          } else {
 122   3            u8State = STATE_IDLE;
 123   3          }
 124   2        }
 125   1      }
 126          
 127          void decode_succ_state(void)
 128          {
 129   1        
 130   1      }
 131          
 132          static void tim2_init(void)
 133          {
 134   1          /* pre-scalar = 1 / 16*/
 135   1          T2MOD &= ~(0x70);
 136   1          T2MOD |= (0x20);
 137   1          /* auto reload mode */
 138   1          CM_RL2 = 0;
 139   1        /* auto clear */
 140   1        T2MOD |= (1 << 3);
 141   1      }
 142          
 143          static void cap_init(void)
 144          {
 145   1        T2MOD |= ((1<<0));
 146   1          TR2 = 1;
 147   1          CAPCON3 = 0x00;
 148   1          CAPCON1 = 0x02;
 149   1          CAPCON2 = (1<<4);
 150   1          CAPCON0 |= (1<<4);
 151   1      }
 152          
 153          void IR_Init(void)
 154          {
 155   1        u8State = STATE_IDLE;
 156   1          u32Result = 0;
 157   1          u8Count = 0;
 158   1          tim2_init();
 159   1        cap_init();
 160   1      }
 161          
 162          uint8_t IR_Check(uint32_t *pu32Cmd)
 163          {
 164   1        if (TF2) {
 165   2          TF2 = 0;
 166   2          u8State = STATE_IDLE;
 167   2        }
 168   1        if (CAPCON0 & (1<<0)) {
 169   2          funcSet[u8State]();
 170   2          CAPCON0 &= ~(1<<0);
 171   2        }
 172   1        if (u8State == STATE_DECODE_SUCC) {
 173   2          u8State = STATE_IDLE;
 174   2          *pu32Cmd = u32Result;
 175   2          return 1;
 176   2        }
 177   1        return 0;
C51 COMPILER V9.60.0.0   IR                                                                08/14/2022 23:18:49 PAGE 4   

 178   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
